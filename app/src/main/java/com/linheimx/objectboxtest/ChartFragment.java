package com.linheimx.objectboxtest;

import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import java.util.ArrayList;
import java.util.List;

import lecho.lib.hellocharts.formatter.AxisValueFormatter;
import lecho.lib.hellocharts.model.Axis;
import lecho.lib.hellocharts.model.AxisValue;
import lecho.lib.hellocharts.model.Column;
import lecho.lib.hellocharts.model.ColumnChartData;
import lecho.lib.hellocharts.model.SubcolumnValue;
import lecho.lib.hellocharts.util.ChartUtils;
import lecho.lib.hellocharts.view.ColumnChartView;


public class ChartFragment extends Fragment {

    ColumnChartView chart;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_chart, container, false);
        chart = (ColumnChartView) view.findViewById(R.id.chart);

        setData(5, 5);

        return view;
    }


    public void setData(float ob, float sqlite) {

        // Column can have many subcolumns, here by default I use 1 subcolumn in each of 8 columns.
        List<Column> columns = new ArrayList<Column>();


        // ob
        List<SubcolumnValue> values = new ArrayList<>();
        SubcolumnValue subcolumnValue = new SubcolumnValue(ob, ChartUtils.COLOR_RED);
        subcolumnValue.setLabel("ob");
        values.add(subcolumnValue);
        Column column = new Column(values);
        column.setHasLabels(true);

        // sqlite
        List<SubcolumnValue> values2 = new ArrayList<>();
        SubcolumnValue subcolumnValue2 = new SubcolumnValue(sqlite, ChartUtils.COLOR_BLUE);
        subcolumnValue2.setLabel("sqlite");
        values2.add(subcolumnValue2);
        Column column2 = new Column(values2);
        column2.setHasLabels(true);

        columns.add(column);
        columns.add(column2);

        ColumnChartData data = new ColumnChartData(columns);

        Axis axisX = new Axis();
        axisX.setFormatter(new AxisValueFormatter() {
            @Override
            public int formatValueForManualAxis(char[] formattedValue, AxisValue axisValue) {
                return 0;
            }

            @Override
            public int formatValueForAutoGeneratedAxis(char[] formattedValue, float value, int autoDecimalDigits) {
                return 0;
            }
        });

        Axis axisY = new Axis().setHasLines(true);
        axisY.setName("时间:毫秒");

        data.setAxisXBottom(axisX);
        data.setAxisYLeft(axisY);

        chart.setColumnChartData(data);

    }
}
